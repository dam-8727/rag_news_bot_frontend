{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import'./MessageInput.scss';// This component handles the text input where users type their messages\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MessageInput=_ref=>{let{onSendMessage,disabled}=_ref;const[message,setMessage]=useState('');// The current text in the input\nconst textareaRef=useRef(null);// Reference to the textarea element\n// Handle form submission (when user clicks send or presses Enter)\nconst handleSubmit=e=>{e.preventDefault();// Only send if there's actual text and we're not disabled\nif(message.trim()&&!disabled){onSendMessage(message.trim());setMessage('');// Clear the input after sending\n}};// Handle keyboard input - send on Enter, but allow Shift+Enter for new lines\nconst handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSubmit(e);}};// Update the message state when user types\nconst handleChange=e=>{setMessage(e.target.value);};// Automatically resize the textarea as the user types more text\nuseEffect(()=>{if(textareaRef.current){textareaRef.current.style.height='auto';textareaRef.current.style.height=textareaRef.current.scrollHeight+'px';}},[message]);return/*#__PURE__*/_jsx(\"form\",{className:\"message-input\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:textareaRef,value:message,onChange:handleChange,onKeyPress:handleKeyPress,placeholder:\"Ask me anything about the news...\",disabled:disabled,className:\"message-textarea\",rows:\"1\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!message.trim()||disabled// Disable if empty or loading\n,className:\"send-button\",children:/*#__PURE__*/_jsx(\"svg\",{width:\"20\",height:\"20\",viewBox:\"0 0 24 24\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\",fill:\"currentColor\"})})})]})});};export default MessageInput;","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","MessageInput","_ref","onSendMessage","disabled","message","setMessage","textareaRef","handleSubmit","e","preventDefault","trim","handleKeyPress","key","shiftKey","handleChange","target","value","current","style","height","scrollHeight","className","onSubmit","children","ref","onChange","onKeyPress","placeholder","rows","type","width","viewBox","fill","xmlns","d"],"sources":["/Users/daminisingla/Desktop/news_frontend/frontend/src/components/MessageInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './MessageInput.scss';\n\n// This component handles the text input where users type their messages\nconst MessageInput = ({ onSendMessage, disabled }) => {\n  const [message, setMessage] = useState('');  // The current text in the input\n  const textareaRef = useRef(null);            // Reference to the textarea element\n\n  // Handle form submission (when user clicks send or presses Enter)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Only send if there's actual text and we're not disabled\n    if (message.trim() && !disabled) {\n      onSendMessage(message.trim());\n      setMessage('');  // Clear the input after sending\n    }\n  };\n\n  // Handle keyboard input - send on Enter, but allow Shift+Enter for new lines\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  // Update the message state when user types\n  const handleChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  // Automatically resize the textarea as the user types more text\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\n    }\n  }, [message]);\n\n  return (\n    <form className=\"message-input\" onSubmit={handleSubmit}>\n      <div className=\"input-container\">\n        {/* The textarea where users type their messages */}\n        <textarea\n          ref={textareaRef}\n          value={message}\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Ask me anything about the news...\"\n          disabled={disabled}\n          className=\"message-textarea\"\n          rows=\"1\"\n        />\n        {/* Send button with a paper plane icon */}\n        <button\n          type=\"submit\"\n          disabled={!message.trim() || disabled}  // Disable if empty or loading\n          className=\"send-button\"\n        >\n          <svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default MessageInput;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,qBAAqB,CAE5B;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAiC,IAAhC,CAAEC,aAAa,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC/C,KAAM,CAACG,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAG;AAC7C,KAAM,CAAAa,WAAW,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAAa;AAE7C;AACA,KAAM,CAAAa,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACA,GAAIL,OAAO,CAACM,IAAI,CAAC,CAAC,EAAI,CAACP,QAAQ,CAAE,CAC/BD,aAAa,CAACE,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAC7BL,UAAU,CAAC,EAAE,CAAC,CAAG;AACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAM,cAAc,CAAIH,CAAC,EAAK,CAC5B,GAAIA,CAAC,CAACI,GAAG,GAAK,OAAO,EAAI,CAACJ,CAAC,CAACK,QAAQ,CAAE,CACpCL,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBF,YAAY,CAACC,CAAC,CAAC,CACjB,CACF,CAAC,CAED;AACA,KAAM,CAAAM,YAAY,CAAIN,CAAC,EAAK,CAC1BH,UAAU,CAACG,CAAC,CAACO,MAAM,CAACC,KAAK,CAAC,CAC5B,CAAC,CAED;AACArB,SAAS,CAAC,IAAM,CACd,GAAIW,WAAW,CAACW,OAAO,CAAE,CACvBX,WAAW,CAACW,OAAO,CAACC,KAAK,CAACC,MAAM,CAAG,MAAM,CACzCb,WAAW,CAACW,OAAO,CAACC,KAAK,CAACC,MAAM,CAAGb,WAAW,CAACW,OAAO,CAACG,YAAY,CAAG,IAAI,CAC5E,CACF,CAAC,CAAE,CAAChB,OAAO,CAAC,CAAC,CAEb,mBACEP,IAAA,SAAMwB,SAAS,CAAC,eAAe,CAACC,QAAQ,CAAEf,YAAa,CAAAgB,QAAA,cACrDxB,KAAA,QAAKsB,SAAS,CAAC,iBAAiB,CAAAE,QAAA,eAE9B1B,IAAA,aACE2B,GAAG,CAAElB,WAAY,CACjBU,KAAK,CAAEZ,OAAQ,CACfqB,QAAQ,CAAEX,YAAa,CACvBY,UAAU,CAAEf,cAAe,CAC3BgB,WAAW,CAAC,mCAAmC,CAC/CxB,QAAQ,CAAEA,QAAS,CACnBkB,SAAS,CAAC,kBAAkB,CAC5BO,IAAI,CAAC,GAAG,CACT,CAAC,cAEF/B,IAAA,WACEgC,IAAI,CAAC,QAAQ,CACb1B,QAAQ,CAAE,CAACC,OAAO,CAACM,IAAI,CAAC,CAAC,EAAIP,QAAW;AAAA,CACxCkB,SAAS,CAAC,aAAa,CAAAE,QAAA,cAEvB1B,IAAA,QACEiC,KAAK,CAAC,IAAI,CACVX,MAAM,CAAC,IAAI,CACXY,OAAO,CAAC,WAAW,CACnBC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAC,4BAA4B,CAAAV,QAAA,cAElC1B,IAAA,SACEqC,CAAC,CAAC,uCAAuC,CACzCF,IAAI,CAAC,cAAc,CACpB,CAAC,CACC,CAAC,CACA,CAAC,EACN,CAAC,CACF,CAAC,CAEX,CAAC,CAED,cAAe,CAAAhC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}